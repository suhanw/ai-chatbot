services:
  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
      # For development, use the dependencies stage
      target: dependencies
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    ports:
      - 3000:3000
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://data:27017/chatbotdb
      REDIS_URI: redis://cache:6379
      COOKIE_SECRET: my-cookie-secret
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      data:
        condition: service_healthy
      cache:
        condition: service_started
    command: npm run dev:server

  data:
    image: mongo:latest
    volumes:
      - ./data/db:/data/db
      # - ./data/src/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    expose:
      - 27017
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=chatbotdb
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3

  cache:
    image: redis:latest
    expose:
      - 6379
    ports:
      - 6379:6379
